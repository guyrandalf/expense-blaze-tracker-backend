{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///Users/guyrandalf/Software/blaze-expense-tracker-backend/src/lib/auth.ts"],"sourcesContent":["import jwt from \"jsonwebtoken\"\nimport { NextResponse } from \"next/server\"\n\nconst JWT_SECRET = process.env.JWT_SECRET!\n\nif (!JWT_SECRET) {\n  throw new Error(\"JWT_SECRET environment variable is not set\")\n}\n\nexport interface JWTPayload {\n  userId: string\n  email: string\n  iat?: number\n  exp?: number\n}\n\nexport function signJWT(payload: Omit<JWTPayload, \"iat\" | \"exp\">): string {\n  return jwt.sign(payload, JWT_SECRET, { expiresIn: \"7d\" })\n}\n\nexport function verifyJWT(token: string): JWTPayload | null {\n  try {\n    return jwt.verify(token, JWT_SECRET) as JWTPayload\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  } catch (error) {\n    return null\n  }\n}\n\nexport function getAuthToken(request: Request): string | null {\n  const authHeader = request.headers.get(\"Authorization\")\n  if (!authHeader?.startsWith(\"Bearer \")) {\n    return null\n  }\n  return authHeader.split(\" \")[1]\n}\n\nexport function withAuth(\n  handler: (req: Request, userId: string) => Promise<Response>\n) {\n  return async (req: Request) => {\n    const token = getAuthToken(req)\n    if (!token) {\n      return NextResponse.json({ error: \"No token provided\" }, { status: 401 })\n    }\n\n    const payload = verifyJWT(token)\n    if (!payload) {\n      return NextResponse.json({ error: \"Invalid token\" }, { status: 401 })\n    }\n\n    return handler(req, payload.userId)\n  }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;;;AAEA,MAAM,aAAa,QAAQ,GAAG,CAAC,UAAU;AAEzC,IAAI,CAAC,YAAY;IACf,MAAM,IAAI,MAAM;AAClB;AASO,SAAS,QAAQ,OAAwC;IAC9D,OAAO,uIAAA,CAAA,UAAG,CAAC,IAAI,CAAC,SAAS,YAAY;QAAE,WAAW;IAAK;AACzD;AAEO,SAAS,UAAU,KAAa;IACrC,IAAI;QACF,OAAO,uIAAA,CAAA,UAAG,CAAC,MAAM,CAAC,OAAO;IAC3B,6DAA6D;IAC7D,EAAE,OAAO,OAAO;QACd,OAAO;IACT;AACF;AAEO,SAAS,aAAa,OAAgB;IAC3C,MAAM,aAAa,QAAQ,OAAO,CAAC,GAAG,CAAC;IACvC,IAAI,CAAC,YAAY,WAAW,YAAY;QACtC,OAAO;IACT;IACA,OAAO,WAAW,KAAK,CAAC,IAAI,CAAC,EAAE;AACjC;AAEO,SAAS,SACd,OAA4D;IAE5D,OAAO,OAAO;QACZ,MAAM,QAAQ,aAAa;QAC3B,IAAI,CAAC,OAAO;YACV,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAoB,GAAG;gBAAE,QAAQ;YAAI;QACzE;QAEA,MAAM,UAAU,UAAU;QAC1B,IAAI,CAAC,SAAS;YACZ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAgB,GAAG;gBAAE,QAAQ;YAAI;QACrE;QAEA,OAAO,QAAQ,KAAK,QAAQ,MAAM;IACpC;AACF","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///Users/guyrandalf/Software/blaze-expense-tracker-backend/src/lib/prisma.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst globalForPrisma = global as unknown as {\n    prisma: PrismaClient | undefined\n}\n\nexport const prisma =\n    globalForPrisma.prisma ??\n    new PrismaClient({\n        log: ['query'],\n    })\n\nif (process.env.NODE_ENV !== 'production') globalForPrisma.prisma = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,kBAAkB;AAIjB,MAAM,SACT,gBAAgB,MAAM,IACtB,IAAI,6HAAA,CAAA,eAAY,CAAC;IACb,KAAK;QAAC;KAAQ;AAClB;AAEJ,wCAA2C,gBAAgB,MAAM,GAAG","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///Users/guyrandalf/Software/blaze-expense-tracker-backend/src/app/api/budget/create/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { withAuth } from \"@/lib/auth\";\nimport { prisma } from \"@/lib/prisma\";\n\nexport const POST = withAuth(async (req: Request, userId: string) => {\n  try {\n    const { month, year, expectedIncome, items } = await req.json();\n    if (!month || !year) {\n      return NextResponse.json(\n        { error: \"Valid month and year are required\" },\n        { status: 400 }\n      );\n    }\n    // Upsert budget\n    const budget = await prisma.budget.upsert({\n      where: {\n        userId_month_year: {\n          userId,\n          month,\n          year,\n        },\n      },\n      update: {\n        expectedIncome: expectedIncome !== undefined ? Number(expectedIncome) : undefined,\n      },\n      create: {\n        userId,\n        month,\n        year,\n        expectedIncome: expectedIncome !== undefined ? Number(expectedIncome) : undefined,\n      },\n    });\n    // If items are provided, upsert them\n    if (Array.isArray(items)) {\n      // Delete old items for this budget\n      await prisma.budgetItem.deleteMany({ where: { budgetId: budget.id } });\n      // Create new items\n      for (const item of items) {\n        await prisma.budgetItem.create({\n          data: {\n            budgetId: budget.id,\n            category: item.category,\n            estimatedAmount: Number(item.estimatedAmount),\n          },\n        });\n      }\n    }\n    // Return updated budget with items\n    const updatedBudget = await prisma.budget.findUnique({\n      where: { id: budget.id },\n      include: { items: true },\n    });\n    return NextResponse.json(updatedBudget, { status: 201 });\n  } catch (error) {\n    console.error(\"Error creating budget:\", error);\n    return NextResponse.json(\n      { error: \"Failed to create budget\" },\n      { status: 500 }\n    );\n  }\n}); "],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEO,MAAM,OAAO,CAAA,GAAA,oHAAA,CAAA,WAAQ,AAAD,EAAE,OAAO,KAAc;IAChD,IAAI;QACF,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,cAAc,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,IAAI;QAC7D,IAAI,CAAC,SAAS,CAAC,MAAM;YACnB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;gBAAE,OAAO;YAAoC,GAC7C;gBAAE,QAAQ;YAAI;QAElB;QACA,gBAAgB;QAChB,MAAM,SAAS,MAAM,sHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,MAAM,CAAC;YACxC,OAAO;gBACL,mBAAmB;oBACjB;oBACA;oBACA;gBACF;YACF;YACA,QAAQ;gBACN,gBAAgB,mBAAmB,YAAY,OAAO,kBAAkB;YAC1E;YACA,QAAQ;gBACN;gBACA;gBACA;gBACA,gBAAgB,mBAAmB,YAAY,OAAO,kBAAkB;YAC1E;QACF;QACA,qCAAqC;QACrC,IAAI,MAAM,OAAO,CAAC,QAAQ;YACxB,mCAAmC;YACnC,MAAM,sHAAA,CAAA,SAAM,CAAC,UAAU,CAAC,UAAU,CAAC;gBAAE,OAAO;oBAAE,UAAU,OAAO,EAAE;gBAAC;YAAE;YACpE,mBAAmB;YACnB,KAAK,MAAM,QAAQ,MAAO;gBACxB,MAAM,sHAAA,CAAA,SAAM,CAAC,UAAU,CAAC,MAAM,CAAC;oBAC7B,MAAM;wBACJ,UAAU,OAAO,EAAE;wBACnB,UAAU,KAAK,QAAQ;wBACvB,iBAAiB,OAAO,KAAK,eAAe;oBAC9C;gBACF;YACF;QACF;QACA,mCAAmC;QACnC,MAAM,gBAAgB,MAAM,sHAAA,CAAA,SAAM,CAAC,MAAM,CAAC,UAAU,CAAC;YACnD,OAAO;gBAAE,IAAI,OAAO,EAAE;YAAC;YACvB,SAAS;gBAAE,OAAO;YAAK;QACzB;QACA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,eAAe;YAAE,QAAQ;QAAI;IACxD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,0BAA0B;QACxC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,OAAO;QAA0B,GACnC;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}
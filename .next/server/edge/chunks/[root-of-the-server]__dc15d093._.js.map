{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { NextResponse } from \"next/server\"\nimport type { NextRequest } from \"next/server\"\n \nexport function middleware(request: NextRequest) {\n  // Check if we're handling an API request\n    if (request.nextUrl.pathname.startsWith('/api/')) {\n      \n    const response = NextResponse.next()\n    \n    // Get the origin of the request\n    const origin = request.headers.get('origin') || ''\n    \n    // Allow CORS from React Native app\n    response.headers.set('Access-Control-Allow-Origin', origin || '*')\n    response.headers.set('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS')\n    response.headers.set('Access-Control-Allow-Headers', 'Content-Type, Authorization')\n    response.headers.set('Access-Control-Allow-Credentials', 'true')\n\n    return response\n  }\n  return NextResponse.next()\n}\n\nexport const config = {\n    matcher: '/((?!_next/static|_next/image|favicon.ico|sitemap.xml|robots.txt).*)',\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;;AAGO,SAAS,WAAW,OAAoB;IAC7C,yCAAyC;IACvC,IAAI,QAAQ,OAAO,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU;QAElD,MAAM,WAAW,6LAAA,CAAA,eAAY,CAAC,IAAI;QAElC,gCAAgC;QAChC,MAAM,SAAS,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;QAEhD,mCAAmC;QACnC,SAAS,OAAO,CAAC,GAAG,CAAC,+BAA+B,UAAU;QAC9D,SAAS,OAAO,CAAC,GAAG,CAAC,gCAAgC;QACrD,SAAS,OAAO,CAAC,GAAG,CAAC,gCAAgC;QACrD,SAAS,OAAO,CAAC,GAAG,CAAC,oCAAoC;QAEzD,OAAO;IACT;IACA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AAC1B;AAEO,MAAM,SAAS;IAClB,SAAS;AACb"}}]
}